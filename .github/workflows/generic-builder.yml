name: generic-builder

on:
  workflow_call:
    inputs:
      docker_push_org:
        description: ""
        required: true
        type: string

  workflow_dispatch:
      docker_push_org:
        description: ""
        required: true
        type: string

jobs:
  digest-environment:
    runs-on: ubuntu-latest
    outputs:
      docker_base_org: ${{steps.digest.outputs.docker_base_org}}
      docker_base_repo: ${{steps.digest.outputs.docker_base_repo}}
      github_repo_owner: ${{steps.digest.outputs.github_repo_owner}}
      github_repo: ${{steps.digest.outputs.github_repo}}
      github_workspace: ${{github.workflow}}
    steps:
      - name: Digest environment information
        id: digest
        shell: bash
        run: |
          DOCKER_BASE_ORG="$(cut -d / -f 1 <<<"${{github.workflow}}")"; \
          DOCKER_BASE_REPO="$(cut -d / -f 2 <<<"${{github.workflow}}")"; \
          if ! grep -q / <<<"${{github.workflow}}"; then \
            DOCKER_BASE_REPO="${DOCKER_BASE_ORG}"; \
            DOCKER_BASE_ORG="library"; \
          fi;
          echo "::set-output name=docker_base_org::$(cut -d / -f 1 <<<"${DOCKER_BASE_ORG}")"; \
          echo "::set-output name=docker_base_repo::$(cut -d / -f 1 <<<"${DOCKER_BASE_REPO}")"; \
          echo "::set-output name=github_repo_owner::${GITHUB_REPOSITORY%/*}"; \
          echo "::set-output name=github_repo::${GITHUB_REPOSITORY#*/}"
  build:
    runs-on: ubuntu-latest
    needs:
      - digest-environment
    environment: Docker Hub Automated Build
    steps:
      - name: Install QEMU
        uses: docker/setup-qemu-action@v2
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_LOGIN}}
          password: ${{secrets.DOCKER_TOKEN}}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get base image tags and platforms
        id: latest-tags
        uses: itsjohannawren/action-dockerhub-latest-tags@main
        with:
          image: ${{github.workflow}}
          number_of_tags: 4
      - name: Determine latest base image
        id: latest
        shell: bash
        run: |
          echo "LATEST=$(head -n 1 <<<"${{steps.latest-tags.outputs.tags}}" | cut -d " " -f 1)" > $GITHUB_ENV
      - name: Build images
        shell: bash
        run: |
          while read -r BUILD; do
            if [ -z "${BUILD}" ]; then
              continue; \
            fi; \
            eval set -- "${BUILD}"
              if [ "${1}" = "${{env.LATEST}}" ] && [ "${{needs.digest-environment.outputs.docker_base_repo}}" = "alpine" ]; then \
                docker buildx build \
                  --build-arg DOCKER_BASE_TAG=${1} \
                  -f Dockerfile.${{needs.digest-environment.outputs.docker_base_repo}} \
                  --push \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:latest \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${1} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${2} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-latest \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${1} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${2} \
                  --platform ${3} \
                  .; \
              elif [ "${DOCKER_BASE_REPO}" = "alpine" ]; then \
                docker buildx build \
                  --build-arg DOCKER_BASE_TAG=${1} \
                  -f Dockerfile.${{needs.digest-environment.outputs.docker_base_repo}} \
                  --push \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${1} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${2} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${1} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${2} \
                  --platform ${3} \
                  .; \
              elif [ "${1}" = "${{env.LATEST}}" ]; then \
                docker buildx build \
                  --build-arg DOCKER_BASE_TAG=${1} \
                  -f Dockerfile.${{needs.digest-environment.outputs.docker_base_repo}} \
                  --push \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-latest \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${1} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${2} \
                  --platform ${3} \
                  .; \
              else \
                docker buildx build \
                  --build-arg DOCKER_BASE_TAG=${1} \
                  -f Dockerfile.${{needs.digest-environment.outputs.docker_base_repo}} \
                  --push \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${1} \
                  --tag ${{inputs.docker_push_org}}/${{needs.digest-environment.outputs.github_repo}}:${{needs.digest-environment.outputs.docker_base_repo}}-${2} \
                  --platform ${3} \
                  .; \
              fi; \
          done <<<"${{steps.latest-tags.outputs.tags}}"
